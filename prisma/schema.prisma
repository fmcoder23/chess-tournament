generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Result {
  WIN
  LOSS
  DRAW
}

model Users {
  id       String @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid
  fullname String @map("fullname")
  email    String @unique @map("email")
  password String @map("password")
  age      Int    @map("age")
  country  String @map("country")
  rating   Int    @default(100) @map("rating")

  isAdmin Boolean @default(false)

  created_at DateTime @default(now()) @map("created_at")

  tournaments     TournamentPlayers[]
  matches_player1 Matches[]           @relation("Player1Matches")
  matches_player2 Matches[]           @relation("Player2Matches")

  @@id([id])
  @@map("users")
}

model Tournaments {
  id         String    @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid
  name       String    @unique @map("name")
  start_date DateTime? @map("start_date")
  end_date   DateTime? @map("end_date")

  participants TournamentPlayers[]
  matches      Matches[]

  @@id([id])
  @@map("tournaments")
}

model TournamentPlayers {
  user_id               String      @map("user_id") @db.Uuid
  tournament_id         String      @map("tournament_id") @db.Uuid
  user_tournament_score Int         @default(0) @map("user_tournament_score")
  user                  Users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tournament            Tournaments @relation(fields: [tournament_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, tournament_id])
  @@map("tournament_players")
}

model Matches {
  id             String   @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid
  player1_id     String   @map("player1_id") @db.Uuid
  player2_id     String?  @map("player2_id") @db.Uuid
  player1_result Result?  @map("player1_result")
  player2_result Result?  @map("player2_result")
  created_at     DateTime @default(now()) @map("created_at")
  tournament_id  String   @map("tournament_id") @db.Uuid

  player1    Users       @relation("Player1Matches", fields: [player1_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  player2    Users?      @relation("Player2Matches", fields: [player2_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tournament Tournaments @relation(fields: [tournament_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([id])
  @@map("matches")
}
